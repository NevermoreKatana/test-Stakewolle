name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.6
    
    - name: Create .env file
      run: |
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        echo DEBUG=${{ secrets.DEBUG }} >> .env
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
        echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
        echo EMAIL_BACKEND=${{ secrets.EMAIL_BACKEND }} >> .env
        echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
        echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
        echo EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} >> .env
        echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
        echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
        echo EH_API_KEY=${{ secrets.EH_API_KEY }} >> .env

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Run Tests
      run: |
        poetry run python manage.py test
    - name: Test Coverage
      run: | 
      export CODACY_PROJECT_TOKEN=${{ secrets.COV_TOKEN }}
      make cov
      bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r cobertura.xml
    
